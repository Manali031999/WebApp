package main
import (
	"fmt"
	"net/http"
	"io/ioutil"
	//"time"
	"encoding/json"
)

type AutoGenerated struct {
	Code int `json:"code"`
	Meta struct {
		Pagination struct {
			Total int `json:"total"`
			Pages int `json:"pages"`
			Page  int `json:"page"`
			Limit int `json:"limit"`
		} `json:"pagination"`
	} `json:"meta"`
	Data []struct {
		ID         int `json:"id"`
		ProductID  int `json:"product_id"`
		CategoryID int `json:"category_id"`
	} `json:"data"`
}

func main(){
	fmt.Println("API Call ... ")
	resp,err:= http.Get("https://gorest.co.in/public-api/product-categories")
	if err!=nil{
		fmt.Println("ERR----------------->",err)
	}else{
		body,err:=ioutil.ReadAll(resp.Body)
		if err!=nil{
			fmt.Println("ERR---------------->",err)
		}else{
			fmt.Println("BODY--------------->",string(body))
			var auto AutoGenerated
			err=json.Unmarshal(body,&auto)
			if err!=nil{
				fmt.Println("Error in unMarshaling",err)
			}else{
				fmt.Println("-----------------UNMARSHALLED DATA--------------------")
				fmt.Println("Code",auto.Code)
				fmt.Println("Total",auto.Meta.Pagination.Total)
				fmt.Println("Pages",auto.Meta.Pagination.Pages)
				fmt.Println("Page",auto.Meta.Pagination.Page)
				fmt.Println("Limit",auto.Meta.Pagination.Limit)
				for i:=0;i<len(auto.Data);i++{
					fmt.Println("Data",auto.Data[i])
				}
			}
        	file, _ := json.MarshalIndent(auto, "", " ")
        	_ = ioutil.WriteFile("products-categories.json", file, 0644)
		}
	}
}
